// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cookie_stand_api.Data;

#nullable disable

namespace cookie_stand_api.Migrations
{
    [DbContext(typeof(CookieDbContext))]
    [Migration("20231006081244_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("cookie_stand_api.Models.CookieStand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Average_Cookies_PerSale")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Maximum_Customers_PerHour")
                        .HasColumnType("int");

                    b.Property<int>("Minimum_Customers_PerHour")
                        .HasColumnType("int");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CookieStands");
                });

            modelBuilder.Entity("cookie_stand_api.Models.HourlySales", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("CookieStandID")
                        .HasColumnType("int");

                    b.Property<int>("HourlySale")
                        .HasColumnType("int");

                    b.HasKey("ID", "CookieStandID");

                    b.HasIndex("CookieStandID");

                    b.ToTable("HourlySales");
                });

            modelBuilder.Entity("cookie_stand_api.Models.HourlySales", b =>
                {
                    b.HasOne("cookie_stand_api.Models.CookieStand", null)
                        .WithMany("HourlySales")
                        .HasForeignKey("CookieStandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("cookie_stand_api.Models.CookieStand", b =>
                {
                    b.Navigation("HourlySales");
                });
#pragma warning restore 612, 618
        }
    }
}
